apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-server
  namespace: system
  labels:
    control-plane: webhook-server
    app.kubernetes.io/name: namespacelabel
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: webhook-server
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: webhook
      labels:
        control-plane: webhook-server
        app.kubernetes.io/name: namespacelabel
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # seccomp:
        #   type: RuntimeDefault
      containers:
      - command:
        - /webhook
        args:
        - --webhook-port=9443
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        image: webhook:latest
        name: webhook
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-certs
          readOnly: true
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-server-cert
      serviceAccountName: webhook-server
      terminationGracePeriodSeconds: 10 