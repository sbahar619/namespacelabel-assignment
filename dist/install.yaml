apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
    control-plane: controller-manager
  name: namespacelabel-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: namespacelabels.labels.shahaf.com
spec:
  group: labels.shahaf.com
  names:
    kind: NamespaceLabel
    listKind: NamespaceLabelList
    plural: namespacelabels
    singular: namespacelabel
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NamespaceLabel is the Schema for the namespacelabels API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NamespaceLabelSpec defines the desired state of NamespaceLabel
            properties:
              labels:
                additionalProperties:
                  type: string
                description: |-
                  Labels is a map of key-value pairs to apply to the namespace where this CR is created.
                  The target namespace is always the same as the CR's metadata.namespace for security.
                type: object
              protectedLabelPatterns:
                description: |-
                  ProtectedLabelPatterns is a list of glob patterns for label keys that should not be overwritten.
                  If a label in the spec matches any of these patterns and the label already exists on the namespace
                  with a different value, the behavior is controlled by protectionMode.
                  Common patterns: "kubernetes.io/*", "*.k8s.io/*", "istio.io/*", "pod-security.kubernetes.io/*"
                items:
                  type: string
                type: array
              protectionMode:
                default: skip
                description: |-
                  ProtectionMode controls behavior when attempting to modify protected labels.
                  - skip: Silently skip protected labels (default)
                  - warn: Skip protected labels but log warnings and update status
                  - fail: Fail the entire reconciliation if any protected labels are attempted
                enum:
                - skip
                - warn
                - fail
                type: string
            type: object
          status:
            description: NamespaceLabelStatus defines the observed state of NamespaceLabel
            properties:
              applied:
                description: Applied indicates whether the labels were successfully
                  applied
                type: boolean
              conditions:
                description: Conditions represent the latest available observations
                  of the resource's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              labelsApplied:
                description: LabelsApplied lists the label keys that were successfully
                  applied
                items:
                  type: string
                type: array
              protectedLabelsSkipped:
                description: ProtectedLabelsSkipped lists label keys that were skipped
                  due to protection
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-controller-manager
  namespace: namespacelabel-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-webhook-server
  namespace: namespacelabel-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-leader-election-role
  namespace: namespacelabel-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespacelabel-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels/finalizers
  verbs:
  - update
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-namespacelabel-editor-role
rules:
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-namespacelabel-viewer-role
rules:
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespacelabel-webhook-server-role
rules:
- apiGroups:
  - labels.shahaf.com
  resources:
  - namespacelabels
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-leader-election-rolebinding
  namespace: namespacelabel-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: namespacelabel-leader-election-role
subjects:
- kind: ServiceAccount
  name: namespacelabel-controller-manager
  namespace: namespacelabel-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespacelabel-manager-role
subjects:
- kind: ServiceAccount
  name: namespacelabel-controller-manager
  namespace: namespacelabel-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespacelabel-proxy-role
subjects:
- kind: ServiceAccount
  name: namespacelabel-controller-manager
  namespace: namespacelabel-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-webhook-server-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespacelabel-webhook-server-role
subjects:
- kind: ServiceAccount
  name: namespacelabel-webhook-server
  namespace: namespacelabel-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
    control-plane: controller-manager
  name: namespacelabel-controller-manager-metrics-service
  namespace: namespacelabel-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
  name: namespacelabel-webhook-service
  namespace: namespacelabel-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: namespacelabel
    control-plane: webhook-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
    control-plane: controller-manager
  name: namespacelabel-controller-manager
  namespace: namespacelabel-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: namespacelabel
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.16.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/sbahar/namespacelabel-controller:main
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: namespacelabel-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespacelabel
    control-plane: webhook-server
  name: namespacelabel-webhook-server
  namespace: namespacelabel-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: webhook-server
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: webhook
      labels:
        app.kubernetes.io/name: namespacelabel
        control-plane: webhook-server
    spec:
      containers:
      - args:
        - --webhook-port=9443
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        command:
        - /webhook
        image: quay.io/sbahar/namespacelabel-webhook:main
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: webhook
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: namespacelabel-webhook-server
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: namespacelabel-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: namespacelabel-webhook-service
      namespace: namespacelabel-system
      path: /validate-labels-shahaf-com-v1alpha1-namespacelabel
  failurePolicy: Fail
  name: vnamespacelabel-v1alpha1.kb.io
  rules:
  - apiGroups:
    - labels.shahaf.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - namespacelabels
  sideEffects: None
